apiVersion: v1
kind: Service
metadata:
  name: ingress-nginx-controller
  namespace: default
  uid: d4556498-6f84-4111-94d4-166915c3aadf
  resourceVersion: '31728309'
  creationTimestamp: '2023-11-17T02:31:41Z'
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
    app.kubernetes.io/version: 1.9.4
    helm.sh/chart: ingress-nginx-4.8.3
  annotations:
    meta.helm.sh/release-name: ingress-nginx
    meta.helm.sh/release-namespace: default
    metallb.universe.tf/ip-allocated-from-pool: first-pool
  managedFields:
    - manager: controller
      operation: Update
      apiVersion: v1
      time: '2023-11-17T02:31:41Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:metallb.universe.tf/ip-allocated-from-pool: {}
        f:status:
          f:loadBalancer:
            f:ingress: {}
      subresource: status
    - manager: helm
      operation: Update
      apiVersion: v1
      time: '2023-11-17T02:31:41Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
        f:spec:
          f:allocateLoadBalancerNodePorts: {}
          f:externalTrafficPolicy: {}
          f:internalTrafficPolicy: {}
          f:ipFamilies: {}
          f:ipFamilyPolicy: {}
          f:ports:
            .: {}
            k:{"port":80,"protocol":"TCP"}:
              .: {}
              f:appProtocol: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
            k:{"port":443,"protocol":"TCP"}:
              .: {}
              f:appProtocol: {}
              f:name: {}
              f:port: {}
              f:protocol: {}
              f:targetPort: {}
          f:selector: {}
          f:sessionAffinity: {}
          f:type: {}
  selfLink: /api/v1/namespaces/default/services/ingress-nginx-controller
status:
  loadBalancer:
    ingress:
      - ip: 172.16.94.176
spec:
  ports:
    - name: http
      protocol: TCP
      appProtocol: http
      port: 80
      targetPort: http
      nodePort: 30766
    - name: https
      protocol: TCP
      appProtocol: https
      port: 443
      targetPort: https
      nodePort: 31333
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/name: ingress-nginx
  clusterIP: 10.108.90.239
  clusterIPs:
    - 10.108.90.239
  type: LoadBalancer
  externalIPs: 
    - 172.16.94.182